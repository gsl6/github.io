<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>web相关知识</title>
    <link href="/2020/06/02/web%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
    <url>/2020/06/02/web%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h5 id="web简介"><a href="#web简介" class="headerlink" title="web简介"></a>web简介</h5><ol><li><p>web开发: 前端开发 网站开发  java 中的web开发 不只有前端 还需要写后台</p></li><li><p>web资源 :也就网页上一些可以看见的就是web资源 比如图片 视频 标签 主要用于页面的</p></li><li><p>web的架构: c/s 架构  b/s架构</p></li></ol><h5 id="c-s架构-也就是客户端与服务器直接进行交互，"><a href="#c-s架构-也就是客户端与服务器直接进行交互，" class="headerlink" title="c/s架构 : 也就是客户端与服务器直接进行交互，"></a>c/s架构 : 也就是客户端与服务器直接进行交互，</h5><ul><li><p>优点:速度快 效率高,安全性比较高,不需要依赖与浏览器 但是需要较高的电脑配置</p></li><li><p>缺点:  必须在客户端安装相应的程序  维护升级比较麻烦</p></li></ul><h5 id="b-s架构-客户端向浏览器发送-gt-浏览器再向服务器发送请求"><a href="#b-s架构-客户端向浏览器发送-gt-浏览器再向服务器发送请求" class="headerlink" title="b/s架构: 客户端向浏览器发送 ==&gt; 浏览器再向服务器发送请求"></a>b/s架构: 客户端向浏览器发送 ==&gt; 浏览器再向服务器发送请求</h5><ul><li><p>优点:  维护升级方便  无缝进行替换</p></li><li><p>缺点: 速度慢依赖于浏览器 有些低版本浏览器动画效果是不能够显示</p></li><li><p>b/s架构的请求原理: </p><p>​      建议连接 ==&gt;索取微信号</p><p>​      聊天 =&gt;发送请求  </p><p>​      聊天  接收到请求  给其响应</p><p>​     请求连接关闭  </p><p>​     先发送请求 再有响应  请求与响应的是配套的</p></li></ul><h5 id="Web服务器的介绍"><a href="#Web服务器的介绍" class="headerlink" title="Web服务器的介绍"></a>Web服务器的介绍</h5><p> Web服务器一般指网站服务器，是指驻留于因特网上某种类型计算机的程序，可以向浏览器等Web客户端提供文档，也可以放置网站文件，让全世界浏览；可以放置数据文件，让全世界下载。目前最主流的三个Web服务器是tomcat 、 weblogic 、IIS</p><p> url 地址: 统一资源定位符 ，也就是访问的路劲  只要是放在服务器上的  图片  页面 每一个都存在访问的路劲  </p><p>  url的组成部分：</p><p><a href="https://uland.taobao.com/sem/tbsearch?refpid=mm_26632258_3504122_32538762&amp;keyword=%E5%A5%B3%E8%A3%85&amp;clk1=c08fa79f9cd4b9e6c7727282760c1c1c&amp;upsid=c08fa79f9cd4b9e6c7727282760c1c1c" target="_blank" rel="noopener">https://uland.taobao.com/sem/tbsearch?refpid=mm_26632258_3504122_32538762&amp;keyword=%E5%A5%B3%E8%A3%85&amp;clk1=c08fa79f9cd4b9e6c7727282760c1c1c&amp;upsid=c08fa79f9cd4b9e6c7727282760c1c1c</a></p><ul><li>https  http 请求的协议</li><li>uland.taobao.com  域名或者是ip地址</li><li>sem/tbsearch 访问具体的资源的路劲</li><li>？后面都是以键值对的形式向服务器传递的参数   多个参数 &amp;进行拼接</li></ul><h4 id="servlet"><a href="#servlet" class="headerlink" title="servlet"></a>servlet</h4><ol><li><p>servlet 是运行在服务器的Java代码  主要用与做处理请求与响应  java web三大主组件之一</p></li><li><p>servlet的使用的步骤:</p></li></ol><ul><li>新建一个项目，配置tomcat服务器</li><li>在idea中添加servletjar</li><li>在web.xml配置servlet</li></ul><h4 id="servlet类的实现方式"><a href="#servlet类的实现方式" class="headerlink" title="servlet类的实现方式"></a>servlet类的实现方式</h4><div class="hljs"><pre><code class="hljs scala">最常用的方式：public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>&#123;    <span class="hljs-meta">@Override</span>    public void service(<span class="hljs-type">ServletRequest</span> req, <span class="hljs-type">ServletResponse</span> res) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> &#123;        <span class="hljs-keyword">super</span>.service(req, res);    &#125;&#125;</code></pre></div><h4 id="servlet的生命周期"><a href="#servlet的生命周期" class="headerlink" title="servlet的生命周期"></a>servlet的生命周期</h4><ul><li><p>servlet是由tomcat容器创建 是在运行tomcat 的时候创建 所以用到 —servlet都需要添加tomcat的lib的jar</p></li><li><p>init() 表示servlet初始化 有且只执行一次  单例设置模式</p></li><li><p>service()方法 所以的请求与响应都会执行这个方法</p></li><li><p>destory() 方法 servlet销毁的执行这个方法  也就tomcat服务器关闭的时候执行</p></li><li><p>servlet 的生命周期是随着tomcat的开始而开始 结束而结束</p></li></ul><div class="hljs"><pre><code class="hljs applescript">&lt;load-<span class="hljs-keyword">on</span>-startup&gt;<span class="hljs-number">-1</span>&lt;/load-<span class="hljs-keyword">on</span>-startup&gt;</code></pre></div><p>设置这个表示 立即加载 是要是&gt;=0 就可以 可以为负数  默认值就是负数  最优先加载，值越小越优先加载</p><h5 id="servlet-访问路劲-通配符设置"><a href="#servlet-访问路劲-通配符设置" class="headerlink" title="servlet 访问路劲 通配符设置"></a>servlet 访问路劲 通配符设置</h5><ul><li><p>/*    表示所有的请求与响应都会执行这个servlet</p></li><li><p>/userservlet  表示 请求是userServlet的时候才会执行这个servlet</p></li><li><p>/admin/* 访问的路劲是admin文件下所有的文件都会执行这个servlet</p></li><li><p>*.do 表示.do结尾的请求路劲都会执行这个servlet</p></li></ul><h4 id="get-post区"><a href="#get-post区" class="headerlink" title="get post区"></a>get post区</h4><ul><li><p>get提交数据 浏览器会缓存数据</p></li><li><p>get提交数据有长度限制</p></li><li><p>get提交数据有大小限制</p></li><li><p>get一般用与文件下载</p></li></ul><p>  post：</p><ul><li><p>post提交数据 不会缓存数据到浏览器</p></li><li><p>post提交数据没有长度限制</p></li><li><p>post提交数据有加密 安全性高</p></li><li><p>post 一般用于表单提交</p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
